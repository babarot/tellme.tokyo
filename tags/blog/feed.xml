<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on tellme.tokyo</title>
    <link>https://tellme.tokyo/tags/blog/</link>
    <description>Recent content in blog on tellme.tokyo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>BABAROT All Right Reserved.</copyright>
    <lastBuildDate>Wed, 29 Jan 2020 23:21:50 +0900</lastBuildDate>
    
	<atom:link href="https://tellme.tokyo/tags/blog/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cloudflare から GitHub Pages の HTTPS 機能に移行する</title>
      <link>https://tellme.tokyo/post/2020/01/29/migrate-https-gh-pages-from-cloudflare/</link>
      <pubDate>Wed, 29 Jan 2020 23:21:50 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2020/01/29/migrate-https-gh-pages-from-cloudflare/</guid>
      <description>以前は GitHub Pages だけでは HTTPS 配信ができなかったので、Cloudflare をプロキシにして HTTPS 化させていた。
カスタムドメインの GitHub Pages で HTTPS を使う - Qiita
もう必要ないので Cloudflare を通さないようにする。
Before:
Domain-provider DNS -&amp;gt; Cloudflare DNS -&amp;gt; GitHub -&amp;gt; tellme.tokyo After:
Domain-provider DNS -&amp;gt; GitHub -&amp;gt; tellme.tokyo 1. ドメインプロバイダの DNS 設定を Cloudflare からプロバイダ提供のものに変更する Cloudflare DNS を使っていたのを、
 ムームードメインの DNS サーバを使うようにセットアップした。
 2. GitHub Pages への IP アドレスを A レコードに設定する GitHub Pages に向ける。
 参考: GitHub Pages で HTTPS を有効にする | tellme.</description>
    </item>
    
    <item>
      <title>はてなブログの記事をインポートした</title>
      <link>https://tellme.tokyo/post/2020/01/28/import-hatena-blog/</link>
      <pubDate>Tue, 28 Jan 2020 00:11:10 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2020/01/28/import-hatena-blog/</guid>
      <description>動機はこれ。
テキストの引越し
今まで、
 Qiita はてなブログ GitHub (このブログ)  に文章を書いてきた。
Medium とか他にもどこかに書いていたような気もするけど気にしないことにした (といいつつ Note は使ってみたいと思っている)。
はてなブログに関しては1度作って消してまたやり直している。 そのときに2014年頃以前のテキストを失った。 これからはすべて GitHub で管理しようと思っている。 自分のブログが1番落ち着くし、どんな話題でも好きに書けるし、サービス終了を気にする必要もないし、ホスティングの乗り換えも簡単にできる (今は GitHub Pages を使ってるけど Netlify にもいけるし適当なサーバでもよい)。
そういえばこのブログ以外にも以前 GitHub でいくつか文章を書いていたこともあった。
Qiita も以前はよく使っていたけどもう使っていないし、はてなブログも使っていない。 Qiita の記事も移行するかどうかは未定1だけど、はてなブログにある記事は愛着もあるので全部移行することにした。
 移行に使ったのはこれ。
 これはもともとローカルに引っ張ってきて更新してブログに Sync するようなツールっぽいけど、これのおかげで自分で生 API 叩かずに手元に全エントリを引っ張ってこれたので使い勝手が良かった。
そのあとは適当に YAML の Front matter をこのブログ用に書き換えて終わり。 画像は自力でダウンロードして GitHub のディレクトリに突っ込んだ。 数が少なかったのと一部の画像ははてなにアップロードせずに CloudApp を使って参照させていたので移行する必要がなかったのも大きい。
とりあえず引っ越した記事に Front matter にはインポート元を書いて、こっちのページから辿れるようにはしてある (oldlink という Front matter 要素を作って、記事 Body に 元記事 というリンク href を埋め込む)。 けど、インポートも済んだことだし気が向いたらはてなブログ自体を消すかもしれない。</description>
    </item>
    
    <item>
      <title>GitHub Pages で HTTPS を有効にする</title>
      <link>https://tellme.tokyo/post/2020/01/20/github-pages-with-https/</link>
      <pubDate>Mon, 20 Jan 2020 19:58:54 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2020/01/20/github-pages-with-https/</guid>
      <description>GitHub Pages で静的ページを公開するのが簡単なのでよく使う。 これまで公開したサイトの HTTPS 化は Cloudfrare でやっていた。1 めんどくさくて移行していなかったんだけど HTTPS 化するのも GitHub Pages の設定画面からできるようなのでやっていく2。
1. IP をレジストラに追加する 公式ガイドにある通り、GitHub の A レコードをすべて登録する。
185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153   待っていると数分でつながるようになる。
$ dig babarot.me +nostats +nocomments +nocmd ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; babarot.me +nostats +nocomments +nocmd ;; global options: +cmd ;babarot.me. IN A babarot.me. 3185 IN A 185.199.110.153 babarot.me. 3185 IN A 185.199.108.153 babarot.me. 3185 IN A 185.199.111.153 babarot.me. 3185 IN A 185.199.109.153 2.</description>
    </item>
    
    <item>
      <title>スムーズに Hugo でブログを書くツール</title>
      <link>https://tellme.tokyo/post/2018/10/16/write-blog-smoothly/</link>
      <pubDate>Tue, 16 Oct 2018 13:18:07 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2018/10/16/write-blog-smoothly/</guid>
      <description>このブログ (b4b4r07/tellme.tokyo) ではマークダウンで記事を書き、Hugo を使って静的ファイルを生成して GitHub Pages でホスティングしている。
とても便利なのだが、いくつか面倒な点がある。
 リアルタイムに記事のプレビューが見たいとなると、hugo server -D する必要があり、都度別コンソールで立ち上げるのが面倒 記事をあたらしく書き始めるとき hugo new post/&amp;lt;filename&amp;gt;.md を打つのが面倒 過去記事を編集するのが面倒 hugo を実行すると draft の記事も生成されてしまう (index には載らないが、生成されるので commit してしまう)  いろいろ面倒なので、Hugo でブログを書くだけのツール (hugo wrapper) を書いた。 hugo の上位互換というわけではなく、必要な機能の不便な部分だけを Override しているだけのツールなので合わせて使っていく。
tellme.tokyo/cmd/blog at master · b4b4r07/tellme.tokyo
Usage: blog [--version] [--help] &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;] Available commands are: edit Edit blog articles new Create new blog article 簡単な CLI ツールになっていて、ブログを編集するときに blog edit とすれば fzf が立ち上がって記事を選択できるようになっている。
$ blog edit &amp;gt; 39/39 &amp;gt; スムーズに Hugo ブログを書くツール Windows 時代の使用ソフト晒し Bind Address で少しハマった話 Hugo で PlantUML のようなシーケンス図を描画する Kubernetes 上で Credentials を扱う HashiCorp Vault の Unseal と Rekey 東京衣食住 Microservices Platform Meetupで話した 『ルポ川崎』を読んだ fzf との連携は b4b4r07/go-finder でやっている1。</description>
    </item>
    
    <item>
      <title>ブログを GKE #k8s に移した</title>
      <link>https://tellme.tokyo/post/2017/08/03/015238/</link>
      <pubDate>Thu, 03 Aug 2017 01:52:38 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2017/08/03/015238/</guid>
      <description>このはてなブログで使っていたドメインを続用するため、移行後も tellme.tokyo です。
移行した背景や技術的な言及は移行先のエントリに書きました。
ブログをGKEで運用し、Spinnakerでデプロイする | tellme.tokyo
おそらくこっちのブログに記事を載せる機会は少なくなりますが、削除する予定は今のところありません。</description>
    </item>
    
    <item>
      <title>今まで作っていた tellme.tokyo というブログ</title>
      <link>https://tellme.tokyo/post/2016/09/20/004203/</link>
      <pubDate>Tue, 20 Sep 2016 00:42:03 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2016/09/20/004203/</guid>
      <description>200X年頃からいわゆるブログをやっておりますが、消しては作りを繰り返し、記事が残らないという残念なことをしてきました。なので、たとえブログが消えても記事がファイルとして残るように、Hugo &amp;amp; GitHub でブログを運営していました。それが、tellme.tokyo でした。しかし、その自作ブログと、このはてなブログと、そこそこのコントリビューションがある Qiita との住み分けに辟易して、ひとつ閉じることにしました。これからは、このはてなブログ（前 blog.b4b4r07.com）に書いていくようにします。ついでにドメイン変更しました（本当は tellme.tokyo としたかったがサブドメイン www. をつけた）。</description>
    </item>
    
    <item>
      <title>アドベントカレンダーに登録した</title>
      <link>https://tellme.tokyo/post/2015/11/13/233649/</link>
      <pubDate>Fri, 13 Nov 2015 23:36:49 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2015/11/13/233649/</guid>
      <description>Shell Script Advent Calendar 2015 zsh Advent Calendar 2015 Vim Advent Calendar 2015  登録したカレンダーは3つ。特に上2つは空席が多いため、複数回参加する（できる）可能性が高いため、3つに留めた。 幸か不幸か、在学中のほとんどはシェル弄りに費やしたため、その集大成として Shell Script Advent Calendar 2015 の1日目に望む予定だ。
ネタは考えていて、チューリング完全についてだ。なぜなら新規カレンダーの作成を申請するときに、カテゴリ選択する必要があるのだが、プログラミング言語にしていいのかどうか迷ったから((結局「運営に任せる」にした))。じゃあチューリング完全かどうか検証して、それを記事のネタにすればいいよねと。
 Shell Script Advent Calendar 2015  まだまだ空席あるのでみなさん、参加よろしくお願いします。</description>
    </item>
    
    <item>
      <title>ブログや Qiita の使い分け</title>
      <link>https://tellme.tokyo/post/2015/07/22/110317/</link>
      <pubDate>Wed, 22 Jul 2015 11:03:17 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2015/07/22/110317/</guid>
      <description>https://qiita.com/b4b4r07
いままで Qiita でブログっぽいことをしてきた。といっても完全プライベートなことじゃなくって技術系のアウトプットに使うっていうこと。そもそも Qiita ってテック系のなんかだし。
なんかやってて得たこととか、忘れたくないなってこと、いわゆる備忘録的なことをローカルマシンに Markdown でも置いてても見返さないし、忘れちゃうってのが最初の動機で Qiita を始めた。だから最初の方の投稿は「見られる」ことを意識しないで「じぶんのため」に見返すようとして書いて投稿してた。でも Qiita が有名になったからか、はたまた SEO 対策がいいからか、はたまたたまたま書いた記事がいい記事だったからかは分からないけど、ストックたくさんついたりはてブや Tweet など SNS でシェアされるようになってからは「見られる」ことに意識して、備忘録的な使い方は自然とかつ必然的にできなくなっていた。それに Qiita っていうテック系の知見集合サービスだから、「ヨソ」で自分の記事垂れ流してるっているヒトノイエ感覚が強くってあんまり適当な事やってると「ブログでやれよ」って言われそうだからブログはじめた。それがこのはてなブログ。まあエンジニアはよく使うブログだし、企業のエンジニアブログにも使われるし。
追記1｛｛ なんでもここまで綺麗に書きたいとかきっちり書こうかってやっぱり見られるってことは多くの人に自分言葉が行き届くってこと。非対話的なコミュニケーションで人をはかるとき文章遣い言葉遣いって大事。誤字脱字してたり、日本語変だと頭悪いのかって思われる。というより、実際に頭悪いのが問題なんじゃなくって見られているってことに気を配っていないことが問題。そういう努力をしていないとガサツだとかすら思われるかもしれない。それはいやだ。｝｝
https://b4b4r07.hatenadiary.com
Qiita よりも前か同じ頃か忘れたけど、一度「Bash と Vim が好き」みたいなタイトルではてなブログやってたんだけど、誤操作か意図的かも忘れたけど消しちゃった過去があるので実はこれが2度め。しかも今より読者もついてて、といっても2人だけど。
はてなブログ再開してからは、「作ったよ」系の記事（自分のツール紹介）とかしてたんだけど、まあ見られない。それより Qiita が順調でなんか書いてもストックたまるしはてブつくしなんか気持ちいい。だから作ってみた系の記事も Qiita に書くようになった（なってしまった。あんまり良くないと思っている）。こうなっちゃうと住み分け不可。
もう一つ問題点あって、「見られる」ことを意識してからの記事って結構慎重になっていて、書き上げるのに2〜3日つかう。下調べも入れるともっとだけど、とりあえず見直しに時間が掛かる。書きながら前後の文章と合わせて変じゃないかとか、基本的な誤字脱字はないかとか、挿入する写真をベストになるまで撮り直ししたりとか、とにかく神経を使う。さっと書いてサッと投稿！ができない。要は昔みたいな使い方ができない。基本何かやってて得たことをアウトプットするのに、そんなに神経と時間使っていてはただの Yak Shaving で他の作業に集中できないという本末転倒。そこでこのはてなブログじゃん。と思いついたのが昨日（遅い）。だから、文章ちょっと変でもいいやって感覚で、とりあえず書く、とりあえず投稿する、をやろうと思う。
それともう一つ。実は他のブログもあってこれも住み分けに頭を悩ませてた問題の一つ。
https://tellme.tokyo
CSS からなにから全て自分で（といっても Hugo のテンプレート）やったブログで、これは「じぶんの」ブログが持ちたいって動機で始めた（割と最近。半年たってない気がする）。Qiita とはてなブログの住み分けができていないときに作ったってんだから完全に頭おかしい。けど作りたかった。で、こっちはもっともっと神経使っていて、Qiita のごとく入念に書くのはもちろんのこと、ネタの厳選もしてる。要は流す情報の制限。
見られてないくせに頑張って神経使ってるとかちょっとおかしい。
ちょっとごちゃごちゃしてきたからここらへんでまとめ。
まとめ 私には記事をかけるブログチックなものが 3 つある。
 Qiita はてなブログ TELLME.TOKYO  使い分けはこう。
Qiita 技術系のアウトプットをする場所。投稿する記事の種類は、テック系オンリー。プライベートな投稿はしない。しっかり入念に書き、事実関係の調査的なことも怠らない。「見られる」ことを意識する。ですます・である調で丁寧に
はてなブログ 私の職業？上、技術寄りになるだろうけど何でも書く。プライベートなこととかも。MacBook 買ったんだけどさ〜みたいなやつ。話し言葉みたいに書いたり、誤字脱字の過度なチェックもしないし、気軽に投稿するため、文章が変な時があるかも。でも気にしない
TELLME.TOKYO こいつはちょっとまだ未定。でも入念に書くなどは Qiita に同じ。結局は個人のブログだから好きなことを書いていいというのがあるから、プライベートなことは書くかもしれない。というより既にそんな投稿がある。
https://tellme.tokyo/post/2015/06/03/macbook
英語系のアウトプットもしたいって考えてたからそれに使うかも。とりあえず自由に厳かにいこうと思う。</description>
    </item>
    
  </channel>
</rss>