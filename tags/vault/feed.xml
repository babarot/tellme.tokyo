<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vault on tellme.tokyo</title>
    <link>https://tellme.tokyo/tags/vault/</link>
    <description>Recent content in vault on tellme.tokyo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>BABAROT All Right Reserved.</copyright>
    <lastBuildDate>Thu, 02 Aug 2018 19:51:52 +0900</lastBuildDate>
    
	<atom:link href="https://tellme.tokyo/tags/vault/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HashiCorp Vault の Unseal と Rekey</title>
      <link>https://tellme.tokyo/post/2018/08/02/vault-intro/</link>
      <pubDate>Thu, 02 Aug 2018 19:51:52 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2018/08/02/vault-intro/</guid>
      <description>環境 HashiCorp Vault 0.10.4
Seal/Unseal HashiCorp Vault (Vault) は起動しただけでは使えない。 Vault は Sealed / Unsealed という自身の状態を表すステータスの概念を持ち、これらを内部で保持する一部ステートフルなアプリケーションである。
Vault は起動時 (再起動、デプロイ後など) は Sealed 状態となっており、Secret の取得や保存など、あらゆるオペレーションができないようになっている。 これはセキュリティを高めるために Vault が用意したプロセスである。
Vault では暗号化したデータを外部ストレージに保存する (Secret Backend と呼ぶ) が、復号して取り出す際に暗号化に使用したキーを必要とする。 この暗号化キーも暗号化されたデータとともに Secret Backend に保存されるが、マスターキーという別のキーで暗号化キーを暗号化している (ちなみにこのマスターキーは Secret Backend には保存されない)。 そのため、何かデータを復号して取り出すには、暗号化キーを暗号化したマスターキーが必要になる。
 例
少しややこしいのでこれらを銀行に例えると、
 マスターキー: 銀行という建物に入るための鍵 暗号化キー: 銀行という建物の中にある保管庫の鍵 秘密: 銀行という建物の中にある保管庫の中にしまってある  (Vault では保管庫は銀行という建物の中にないので実際には少し違うが) 秘密を取り出すにはまず銀行の中に入るための鍵が必要で、その次に保管庫の鍵が必要になる。 また、保管庫の鍵は銀行内にあるが銀行に入るための鍵は銀行の外にいる (複数の) 行員が持っているため、この銀行の鍵を準備する (Unseal) 必要がある。
 上で説明したように、Vault でデータを取り出すためには、 Sealed 状態を解除する必要があり、そのためにはマスターキーが必要になる。 Vault サーバ (クラスタ) ははじめて起動するとき (Initialize) に、マスターキーを5つのシャードに分割して Vault クライアントに提示する (Unseal Keys)。 再度、マスターキーを構築するためには3つ以上のシャードを必要とする。 これにはシャミアの秘密分散法というアルゴリズムが用いられている。 ただし、Vault はこれらのシャードキーをどこにも保存しないので、Initialize をした者は別途保管する必要がある。</description>
    </item>
    
  </channel>
</rss>