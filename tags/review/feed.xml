<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>review on tellme.tokyo</title>
    <link>https://tellme.tokyo/tags/review/</link>
    <description>Recent content in review on tellme.tokyo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>BABAROT All Right Reserved.</copyright>
    <lastBuildDate>Tue, 31 Dec 2019 23:59:04 +0900</lastBuildDate>
    
	<atom:link href="https://tellme.tokyo/tags/review/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2019年振り返り</title>
      <link>https://tellme.tokyo/post/2019/12/31/2019-review/</link>
      <pubDate>Tue, 31 Dec 2019 23:59:04 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2019/12/31/2019-review/</guid>
      <description>仕事  1月からはメルペイの仕事に積極的に関わる機会があり、そのときに HashiCorp Vault を深ぼることから始まった。 Vault のドキュメントを漁って Vault on GKE のデザインからやることができた。しかしまだまだVaultビギナーなのでもっと追えるようにしようと思っている。
それからのちの GoCon Fukuoka で発表することにもなるが、Cloud Functions をもちいた Microservices の成果の観測を始める Project を作った。 Cloud Functions を大量に作ったのだけど、これを効率的に扱ういい方法がまだ見つかっていない。Serverless framework はあるのだけど、Lambda でさえそこまでアクティブにメンテナンスされていないようで、ここらへんはコントリビューションのしがいがあるかなーと睨んでいる。
そのあとは、Platform (主に Terraform 管理レポジトリ) の US 対応をしたりした。 Platform のグローバル化は Platform チームの目指すべきところでもあり、メルカリチームの悲願でもあるのでそこに貢献できたのはグッド。
10月からはバタバタしているうちに12月になってた。
コントリビューション  Software Design 2019年9月号 12 OSS projects (incl. private repos)  b4b4r07/stein https://github.com/b4b4r07/stein/    海外カンファレンス  HashiCorp &amp;lsquo;19 re:Invent &amp;lsquo;19  登壇  (mercari.go#6) Testing with YAML - Speaker Deck (GoConference &amp;lsquo;19 Summer in Fukuoka) Cloud Functions in Go at Mercari - Speaker Deck (Kubernetes Meetup Tokyo #18) Kubernetes manifests management and operation in Mercari - Speaker Deck (未来大×企業エンジニア 春のLT大会) Insert an Example of Software Engineer Here - Speaker Deck  プライベート  越して2年を迎えた。そろそろ引っ越したいなぁ</description>
    </item>
    
    <item>
      <title>2019年に読んだ本、観た映画</title>
      <link>https://tellme.tokyo/post/2019/12/28/2019-books-movies/</link>
      <pubDate>Sat, 28 Dec 2019 19:01:59 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2019/12/28/2019-books-movies/</guid>
      <description>本に関しては記録がないので直近で記憶に残ってるやつ。映画は Filmarks ベース。
本 韓国 行き過ぎた資本主義 ちょうど映画で観た「パラサイト 半地下の家族」で描かれている貧困問題などがどのようにして形成されたのか、を経済的な観点からレビューしているので面白い。97年に韓国を襲ったIMF危機についても解説しておりこれも映画「国家が破産する日」に連動するので面白い。
いわゆるA級戦犯 今の政治経済を勉強しようと思ったときに、今の体制の根本は戦後の憲政から学ぶとキャッチアップがしやすいなと思ったので、戦後GHQが採った占領政策から学ぼうと思って読み始めた。これを読んで自分もそうだけど多くの人が「A級戦犯」や戦後の自虐史観や占領政策のことを何も知らないなと思った。
奇跡の経済教室 現代貨幣理論（MMT）を勉強していく中でそのベースとなる部分を勉強しようと思って読んだ。インフレとデフレ、高校の政治経済の授業で習ったようなことがなぜどの政権でも実施できないのかと思った。いわゆる「失われた30年」は自ら捨てているようなものじゃねえか。返せワイの平成
実践Terraform 話題になってたやつ。Kindleで出てたので読んでみた。AWSがメインの題材、GCPだったらより楽しかったかな。
苦しかったときの話をしようか 筆者の娘さんが就職をしようとなったときに、何をしたらいいのかと迷いあぐねていたのをみて「なぜ今の若者は夢を持てないのか」と感じたらしい。それは自分自身をよく知らないからだという1つの仮説から、どのようにして自分の軸を見つけて、やりたいことを探すか、ということを筆者の経験や体験ベースで書いた本。内容自体はまあそうだよねーって感じだったけど、改めて文字に起こされて脳内に入れられるとフムフムってなった。
映画 1. パラサイト 半地下の家族 これは間違いない。今年ダントツ1番かも
どんよりダークな感じ。これぞTHE・韓国映画っていうラスト！韓国の行き過ぎた経済格差の風刺も効いてる。マストウォッチ
2. エルカミーノ ブレイキング・バッドの公式な続編。Afterホワイト先生の世界をジェシー目線でいい感じに描いていて最高にグッド
3. ホテル・ムンバイ 2008年にインドの五つ星ホテルで実際に起きたテロに立ち向かったホテルマンと宿泊客の話。何が印象に残ったかってテロリストが100%の悪だと言えない形で描いていたこと。テロリストもまた被害者で彼らなりの正義に突き動かされてるんだなーと
4. アルキメデスの大戦 巨大戦艦（後の戦艦大和）を建造したい大艦巨砲主義に突き動かされる平山陣営と、これからは航空機の時代だと空母を作りたい山本五十六陣営。提出された大和建造の見積もりが明らかに疑わしくその不正を暴くために五十六陣営に雇われた数学科の学生カイタダシのお話。
この映画の何が良かったって大迫力のVFXで描く大和がカッコいいってのはあるんだけど、1番は平山忠道造船中将（造船エンジニア、設計技師）が言ったカイタダシに向けて言った言葉。
（平山案の大和建造費の不正を暴くために再度大和を白紙から設計する過程を踏んだ彼に対して）
 君はこの艦を君自身で1度作り出した事があるはずだ
 そうなんだよ。しかも相手が寄越してきた見積もり案から大和の全貌を紐解いて、相手が作ろうとしているであろう戦艦の設計図を描いちゃった。しかもその中で相手が犯した設計上の欠陥まで修正を考慮して描いちゃった。これはSaaSをちょっと触ってそのアーキテクチャを想像してフロントエンドとバックエンドを実装しちゃった感じだな、ソフトウェアエンジニア的にいうと。こんなことしちゃったらダメもとでもリリース（建造）したくなるよね。実際にプロダクションで動いてリクエストを受ける様を見たくなる。クローズされるとわかっていても。その設計技師・技術者の性をくすぐりつつも、それとは別の理由で（政治的な意味合いで）なぜ沈むとわかっている大和を建造しないといけないのか、説明されたときに項垂れる他なかった&amp;hellip;
 それでも日本人はまた戦艦「大和」をつくるだろう〜この国が抱える根本的な宿痾（三田紀房,戸高一成） | 現代ビジネス | 講談社（1/6） エンターテインメントで〝反戦〟打ち出す　「アルキメデスの大戦」の山崎貴監督：時事ドットコム 【ネタバレあり】『アルキメデスの大戦』感想・解説：大和に新解釈を提示する王道歴史ミステリ | ナガの映画の果てまで 山崎貴監督が語る｢アルキメデスの大戦｣とVFX | 映画界のキーパーソンに直撃 | 東洋経済オンライン | 経済ニュースの新基準  5. 牝猫たち (2017) （映画の説明省略）
池袋感（外面・内面）がすごい。3人の視点でのアングラ世界の描き方は良かったんだけど、最終的に3人とも客に求めてるものが同じに収束していくのは客側（もしくは第三者視点で）の理想論すぎるかなと。実世界では結末がないからかもしれんけど現実ではああいう収束の仕方はないだろうなと
振り返り もうちょっと読んだり観たりしたけど、文章にまで書き起こす気力をくれる奴ら..!って感じで厳選した。あともっとこまめに Filmarks でレビュー書こ。振り返るの大変。</description>
    </item>
    
    <item>
      <title>2017年振り返り</title>
      <link>https://tellme.tokyo/post/2018/01/05/looking-back-on-2017/</link>
      <pubDate>Fri, 05 Jan 2018 19:52:12 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2018/01/05/looking-back-on-2017/</guid>
      <description>もう年も変わってしまったけれど、去年どのような1年を過ごしたのかを振り返る。
1〜7月、SRE になったという記事でもある通り、環境や心境の変化もあってクォータの変わり目でもある7月のタイミングでチームを異動した。 それまでは JP チームでガイドだったり大型便向けの電話対応用の API を作ったり、配送周りで上がってくる問い合わせの技術対応をしていた。
少し戻って6月は、US アプリの刷新チームにてバックエンド API のサーバサイドエンジニアをやっていた。 入社からずっと JP のことをやっていたので、US に関わったのはとても新鮮だった。
7月、SRE になったのだけれど、まずなにをやるべきか、ということになった。 ちょうど全社的に Microservices 化に舵を切り出したころだったので、 「Microservices への技術転向を支える基盤づくりをする」SRE メンバーになることを当面の目標として、 そのために必要な技術の学習やキャッチアップを兼ねて、 社内ドキュメントツールとしてモノリシックに動いていた Crowi という Wiki サービスをコンテナ化して Kubernetes で構築してみることになった。
 メルカリ社内ドキュメントツールの Crowi を Kubernetes に載せ替えました - Mercari Engineering Blog  コンテナや Kubernetes、Spinnaker といった技術やツールを勉強しつつ、ミドルウェア自体のキャッチアップもこのときにやった。 仕事でありながら勉強できるという環境にあったので、とても貴重な体験だったかなと思う。 また、(今回は) Crowi という、
 Web アプリケーションを違うアーキテクチャに載せ替えるとしたときに考えるべきこと
 にフォーカスしながらミドルウェアの勉強ができたのもいい体験だった1。 各種ミドルウェア、ソフトウェアはそれぞれのマニュアルや技術書を読むことで得られるが、 システムに落とし込んで構成を組むときに思慮するというのは今までに経験がなかったのでよかった。
また、プライベートでははてなブログで書いていたブログをコンテナ化したり Kubernetes に載せたりして GKE の勉強をしていた (GCP のクーポンが切れたのでもう GKE には載っていない)。 ちなみにちょっとずつこっちにインポートしているが、以前のブログはまだ消してはいないので残っている。
 ブログをGKEで運用し、Spinnakerでデプロイする | tellme.</description>
    </item>
    
    <item>
      <title>2016年振り返り</title>
      <link>https://tellme.tokyo/post/2016/12/31/204112/</link>
      <pubDate>Sat, 31 Dec 2016 20:41:12 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2016/12/31/204112/</guid>
      <description>去年は「つくったものリスト」を書きました。今年は、つくったものベースよりもやったことベースで話したほうが膨らみそうなので、今年の振り返りとしてメモしておこうと思います。
[http://www.tellme.tokyo/entry/2015/12/31/005300:embed:cite]
振り返り と思ったんですけど特に思い浮かばなかったので、ここで締めさせていただきます。</description>
    </item>
    
    <item>
      <title>MacBook 12 inch を買った</title>
      <link>https://tellme.tokyo/post/2015/08/14/120049/</link>
      <pubDate>Fri, 14 Aug 2015 12:00:49 +0900</pubDate>
      
      <guid>https://tellme.tokyo/post/2015/08/14/120049/</guid>
      <description>MacBook 12 inch を買った  5/20 に「新しい MacBook」が届いた．Apple のオンラインの Store で，実際にポチったのは4/12なので届くのには1ヶ月以上かかったことになる．
スペックはこの通りだ．
 CPU を最大の 1.3GHz に引き上げた．処理スピードは速いに越したことはない．それと，ここに載っていない変更点として，キーボードを US 配列にした．これはデザイン的な動機もあるが，主として私の用途がプログラミング関連だからだ．デスクトップ PC にも US 配列のキーボードを使用している．
 Why なぜ，この賛否両輪ある新しい無印の MacBook を買ったかというと，それまで使っていた MacBook Air (13 inch, Mid 2012) に不満が溜まってきていたからだ．
 13インチはモバイル機としては大きすぎる メモリが 4GB（初のモバイル Mac だったため勝手がわからなかった） キーボード（特にスペースキー）の反応が悪くなり始めた MacBook がかっこ良すぎた  上2つが特に大きな動機だった．MacBook が発表される前，一度 MacBook Air 11 inch を検討していたくらいに軽さ・小ささを求めていた．
以前，iPad（Airの前）を所有していた．買った当初は頻繁に持ち歩いていたもの，その重さや大きさからか徐々に持ち運ばなくなっていた．そこで，それを売っぱらって iPad mini を買うことにした．iPad mini にしてからは持ち歩くことが増え，また片手でひょいと持ちやすかったため，トイレやらキッチンやら隙間時間を生み出しそうなところには常に連れ歩いた．この携帯性がノート PC にも欲しかった．出かけるとき，ひょいと「PC 使うかわかんないけど持っていくか」となりたかったのだ．
いざ買ってみて 満足か，後悔か．もちろん大満足である．とにかく軽くて小さい Mac PC（UNIX 端末）が欲しい人にはピッタリなノート PC だと思う．賛否両論あるポイントを中心にレビューしてみる．
 USB-C USB-C はまったく新しい規格だ．USB 系の正統進化で，リバーシブルに着脱でき，また給電からデータ転送までマルチな役割を一手に担う．MacBook では，その新しい規格のポートをたったひとつしか採用しなかったことで大きな論争をよんだ．</description>
    </item>
    
  </channel>
</rss>